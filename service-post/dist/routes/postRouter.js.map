{"version":3,"sources":["../../src/routes/postRouter.js"],"names":["express","require","router","Router","get","req","res","posts","Post","find","send","e","console","error","status","json","id","params","country","Country","findByPk","name","findOne","where","code","module","exports"],"mappings":";;AACA;;;;AADA,MAAMA,OAAO,GAAOC,OAAO,CAAC,SAAD,CAA3B;;AAGA,MAAMC,MAAM,GAAQF,OAAO,CAACG,MAAR,EAApB;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChC,MAAI;AACA,UAAMC,KAAK,GAAK,MAAMC,cAAKC,IAAL,CAAU,EAAV,CAAtB;AACAH,IAAAA,GAAG,CAACI,IAAJ,CAASH,KAAT;AACH,GAHD,CAGE,OAAOI,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAL,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACH;AACJ,CARD;AAUAb,MAAM,CAACE,GAAP,CAAW,MAAX,EAAmB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnC,QAAM;AAACU,IAAAA;AAAD,MAAOX,GAAG,CAACY,MAAjB;;AACA,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,QAAR,CAAiBJ,EAAjB,CAAtB;AACAV,IAAAA,GAAG,CAACS,IAAJ,CAASG,OAAT;AACH,GAHD,CAGE,OAAOP,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAL,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACH;AACJ,CATD;AAWAb,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAM;AAACe,IAAAA;AAAD,MAAShB,GAAG,CAACY,MAAnB;;AACA,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMC,OAAO,CAACG,OAAR,CAAgB;AAClCC,MAAAA,KAAK,EAAE;AAACF,QAAAA;AAAD;AAD2B,KAAhB,CAAtB;AAGAf,IAAAA,GAAG,CAACS,IAAJ,CAASG,OAAT;AACH,GALD,CAKE,OAAOP,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAL,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACH;AACJ,CAXD;AAaAb,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0B,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC1C,QAAM;AAACkB,IAAAA;AAAD,MAASnB,GAAG,CAACY,MAAnB;;AACA,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMC,OAAO,CAACG,OAAR,CAAgB;AAClCC,MAAAA,KAAK,EAAE;AAACC,QAAAA;AAAD;AAD2B,KAAhB,CAAtB;AAGAlB,IAAAA,GAAG,CAACS,IAAJ,CAASG,OAAT;AACH,GALD,CAKE,OAAOP,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAL,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACH;AACJ,CAXD;AAaAU,MAAM,CAACC,OAAP,GAAoBxB,MAApB","sourcesContent":["const express   =   require('express');\r\nimport Post from '../models/post';\r\n\r\nconst router    =   express.Router();\r\n\r\nrouter.get('/', async (req, res) => {\r\n    try {\r\n        const posts =   await Post.find({});\r\n        res.send(posts)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json();\r\n    }\r\n});\r\n\r\nrouter.get('/:id', async (req, res) => {\r\n    const {id} = req.params;\r\n    try {\r\n        const country = await Country.findByPk(id);\r\n        res.json(country)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json();\r\n    }\r\n});\r\n\r\nrouter.get('/name/:name', async (req, res) => {\r\n    const {name} = req.params;\r\n    try {\r\n        const country = await Country.findOne({\r\n            where: {name}\r\n        });\r\n        res.json(country)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json()\r\n    }\r\n});\r\n\r\nrouter.get('/code/:code', async (req, res) => {\r\n    const {code} = req.params;\r\n    try {\r\n        const country = await Country.findOne({\r\n            where: {code}\r\n        });\r\n        res.json(country)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json()\r\n    }\r\n});\r\n\r\nmodule.exports  =   router;"],"file":"postRouter.js"}