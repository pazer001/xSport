{"version":3,"sources":["../../src/routes/postRouter.js"],"names":["express","require","router","Router","get","req","res","authorization","headers","personId","posts","Post","aggregate","$match","$project","isLiked","$in","content","tags","likesLength","$size","send","e","console","error","status","json","patch","_id","params","updateOne","$push","likes","$pull","post","body","create","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\r\nimport Post from '../models/post';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/', async (req, res) => {\r\n    const {authorization} = req.headers;\r\n    const personId  =   authorization;\r\n\r\n    try {\r\n        const posts = await Post.aggregate([\r\n            {$match: {}},\r\n            {\r\n                $project: {\r\n                    isLiked: {$in: [personId, '$likes']},\r\n                    content: \"$content\",\r\n                    personId: \"$personId\",\r\n                    tags: \"$tags\",\r\n                    likesLength: {$size: \"$likes\"}\r\n                }\r\n            }\r\n        ]);\r\n\r\n        res.send(posts)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json();\r\n    }\r\n});\r\n\r\nrouter.patch('/like/:_id', async (req, res) => {\r\n    const {_id} = req.params;\r\n    const {authorization} = req.headers;\r\n    const personId  =   authorization;\r\n\r\n    try {\r\n        const posts = await Post.updateOne(\r\n            {_id},\r\n            {\r\n                $push: {likes: personId},\r\n                isLiked: true\r\n            }\r\n        );\r\n        res.send(posts)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json();\r\n    }\r\n});\r\n\r\nrouter.patch('/dislike/:_id', async (req, res) => {\r\n    const {_id} = req.params;\r\n    const {authorization} = req.headers;\r\n    const personId  =   authorization;\r\n\r\n    try {\r\n        const posts = await Post.updateOne(\r\n            {_id},\r\n            {\r\n                $pull: {likes: personId},\r\n                isLiked: false\r\n            }\r\n        );\r\n        res.send(posts)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json();\r\n    }\r\n});\r\n\r\nrouter.post('/', async (req, res) => {\r\n    const {content} = req.body;\r\n    const {authorization} = req.headers;\r\n    const personId  =   authorization;\r\n\r\n    try {\r\n        const posts = await Post.create(\r\n            {\r\n                content,\r\n                personId,\r\n                tags: [],\r\n                likes: []\r\n            }\r\n        );\r\n        res.send(posts)\r\n    } catch (e) {\r\n        console.error(e);\r\n        res.status(500).json();\r\n    }\r\n});\r\n\r\nmodule.exports = router;"],"file":"postRouter.js"}